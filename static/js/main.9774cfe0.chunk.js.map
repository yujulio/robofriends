{"version":3,"sources":["components/Card.js","components/CardList.js","components/SearchBox.js","components/Scroll.js","components/ErrorBoundry.js","containers/App.js","reportWebVitals.js","index.js"],"names":["Card","this","props","name","email","id","className","src","alt","React","Component","CardList","cardArray","robots","map","user","Fragment","SearchBox","searchfield","searchChange","type","placeholder","onChange","Scroll","style","overflowY","border","height","children","ErrorBoundry","state","hasError","setState","App","onSearchChange","event","target","value","fetch","then","response","json","users","filteredRobots","filter","robot","toLocaleLowerCase","includes","length","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2OAiBeA,E,4JAdb,WACE,MAA4BC,KAAKC,MAAzBC,EAAR,EAAQA,KAAMC,EAAd,EAAcA,MAAOC,EAArB,EAAqBA,GACrB,OACE,sBAAKC,UAAU,sDAAf,UACE,qBAAKC,IAAG,+BAA0BF,EAA1B,YAAwCG,IAAKH,IACrD,gCACE,6BAAKF,IACL,4BAAIC,c,GARKK,IAAMC,WCgBVC,EAfE,SAAC,GAAgB,IAI1BC,EAJyB,EAAbC,OAIOC,KAAK,SAAAC,GAC5B,OAAO,cAAC,EAAD,CAAoBV,GAAIU,EAAKV,GAAIF,KAAMY,EAAKZ,KAAMC,MAAOW,EAAKX,OAAnDW,EAAKV,OAGzB,OACE,cAAC,IAAMW,SAAP,UACGJ,KCEQK,EAbG,SAAC,GAAgC,EAA/BC,YAAgC,IAAnBC,EAAkB,EAAlBA,aAC/B,OACE,qBAAKb,UAAU,MAAf,SACE,uBACEA,UAAU,mCACVc,KAAK,SACLC,YAAY,gBACZC,SAAUH,OCCHI,EARA,SAACrB,GACd,OACE,qBAAKsB,MAAO,CAACC,UAAW,SAAUC,OAAQ,kBAAmBC,OAAQ,SAArE,SACGzB,EAAM0B,YCkBEC,E,kDApBb,WAAY3B,GAAQ,IAAD,8BACjB,cAAMA,IACD4B,MAAQ,CACXC,UAAU,GAHK,E,qDAOnB,WACE9B,KAAK+B,SAAS,CAACD,UAAU,M,oBAG3B,WACE,OAAI9B,KAAK6B,MAAMC,SACN,uCAGF9B,KAAKC,MAAM0B,a,GAjBKnB,IAAMC,WC6ClBuB,G,wDAvCb,aAAe,IAAD,8BACZ,gBAaFC,eAAiB,SAACC,GAChB,EAAKH,SAAS,CAACd,YAAaiB,EAAMC,OAAOC,SAbzC,EAAKP,MAAQ,CACXjB,OAAQ,GACRK,YAAa,IAJH,E,qDAQd,WAAqB,IAAD,OAClBoB,MAAM,8CACHC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAK,OAAI,EAAKV,SAAS,CAACnB,OAAQ6B,S,oBAO1C,WACE,MAAgCzC,KAAK6B,MAA7BjB,EAAR,EAAQA,OAAQK,EAAhB,EAAgBA,YACVyB,EAAiB9B,EAAO+B,QAAO,SAAAC,GACnC,OAAOA,EAAM1C,KAAK2C,oBAAoBC,SAAS7B,EAAY4B,wBAE7D,OAAQjC,EAAOmC,OAEb,sBAAK1C,UAAU,KAAf,UACE,oBAAIA,UAAU,KAAd,yBACA,cAAC,EAAD,CAAWa,aAAclB,KAAKiC,iBAC9B,cAAC,EAAD,UACE,cAAC,EAAD,UACE,cAAC,EAAD,CAAUrB,OAAQ8B,WAPF,6C,GAxBVlC,IAAMC,YCKTuC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,MCAdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.9774cfe0.chunk.js","sourcesContent":["import React from 'react'\n\nclass Card extends React.Component {\n  render() {\n    const { name, email, id } = this.props;\n    return (\n      <div className='tc bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5'>\n        <img src={`https://robohash.org/${id}?200x200`} alt={id}/>\n        <div>\n          <h2>{name}</h2>\n          <p>{email}</p>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Card;","import React from 'react'\nimport Card from './Card'\n\nconst CardList = ({ robots }) => {\n\n  // throw new Error('Fulcck')\n\n  const cardArray = robots.map( user => {\n    return <Card key={user.id} id={user.id} name={user.name} email={user.email}/>\n  })\n\n  return (\n    <React.Fragment>\n      {cardArray}\n    </React.Fragment>\n  );\n}\n\nexport default CardList;","import React from 'react'\n\nconst SearchBox = ({searchfield, searchChange}) => {\n  return (\n    <div className='pa2'>\n      <input\n        className='pa3 ba b--green bg-lightest-blue'\n        type='search'\n        placeholder='Search robots'\n        onChange={searchChange}\n      />\n    </div>\n  )\n}\n\nexport default SearchBox;","import React from 'react'\n\nconst Scroll = (props) => {\n  return (\n    <div style={{overflowY: 'scroll', border: '1px solid black', height: '700px'}}>\n      {props.children}\n    </div>\n  )\n}\n\nexport default Scroll;","import React from 'react'\n\nclass ErrorBoundry extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      hasError: false\n    }\n  }\n\n  componentDidCatch() {\n    this.setState({hasError: true})\n  }\n\n  render() {\n    if (this.state.hasError) {\n      return <h1>Error</h1>\n    }\n\n    return this.props.children\n  }\n}\n\nexport default ErrorBoundry;","import React from 'react'\nimport CardList from '../components/CardList'\nimport SearchBox from '../components/SearchBox'\nimport Scroll from '../components/Scroll'\nimport ErrorBoundry from '../components/ErrorBoundry'\nimport './App.css';\n\nclass App extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      robots: [],\n      searchfield: ''\n    }\n  }\n\n  componentDidMount() {\n    fetch('https://jsonplaceholder.typicode.com/users')\n      .then(response => response.json())\n      .then(users => this.setState({robots: users}))\n  }\n\n  onSearchChange = (event) => {\n    this.setState({searchfield: event.target.value})\n  }\n\n  render() {\n    const { robots, searchfield } = this.state\n    const filteredRobots = robots.filter(robot => {\n      return robot.name.toLocaleLowerCase().includes(searchfield.toLocaleLowerCase())\n    })\n    return !robots.length ? <h1>Loading</h1> :\n    (\n      <div className='tc'>\n        <h1 className='f1'>RoboFriends</h1>\n        <SearchBox searchChange={this.onSearchChange} />\n        <Scroll>\n          <ErrorBoundry>\n            <CardList robots={filteredRobots}/>\n            </ErrorBoundry>\n        </Scroll>\n      </div>\n    )\n  }\n\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App'\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}